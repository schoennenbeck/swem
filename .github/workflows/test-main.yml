# This is a basic workflow to help you get started with Actions

name: Test on main branch

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
    paths:
      - "**.py"
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    strategy:
      fail-fast: false
      matrix:
        pyversion: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pyversion }} 
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2
      # Install package and pytest
      - name: Install dependencies
        run: poetry install --with dev

      # Run pytest
      - name: Run tests
        run: poetry run pytest tests/

  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pyversion }} 
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2
      # Install package and pytest
      - name: Install dependencies
        run: poetry install --with dev

      # Run pytest
      - name: Run tests
        run: poetry run pytest --cov=swem tests/
  
      - name: Publish coverage results
        run: poetry run coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
